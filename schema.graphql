type Article {
  body: String
  createdAt: ISO8601DateTime!
  id: ID!
  slug: String
  title: String
  updatedAt: ISO8601DateTime!
  userId: Int!
}

"""
Attributes for creating or updating a blog article
"""
input ArticleAttributes {
  """
  Full body of the article
  """
  body: String!

  """
  Header for the article
  """
  title: String!
}

type ArticleCollection {
  collection: [Article!]!
  metadata: CollectionMetadata!
}

type CollectionMetadata {
  currentPage: Int!
  limitValue: Int!
  totalCount: Int!
  totalPages: Int!
}

type Comment {
  ancestry: String
  articleId: Int!
  body: String
  createdAt: ISO8601DateTime!
  id: ID!
  updatedAt: ISO8601DateTime!
  userId: Int!
}

"""
Attributes for creating or updating a blog article comment
"""
input CommentAttributes {
  """
  Full body of the comment
  """
  body: String!
}

"""
Autogenerated input type of CreateArticle
"""
input CreateArticleInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
}

"""
Autogenerated return type of CreateArticle
"""
type CreateArticlePayload {
  article: Article!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
}

"""
Autogenerated input type of CreateComment
"""
input CreateCommentInput {
  articleId: ID!
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateComment
"""
type CreateCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment!
  errors: [UserError!]!
}

"""
Autogenerated input type of CreateUser
"""
input CreateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  firstName: String!
  lastName: String!
}

"""
Autogenerated return type of CreateUser
"""
type CreateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]!
  user: User!
}

"""
Autogenerated input type of DestroyArticle
"""
input DestroyArticleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DestroyArticle
"""
type DestroyArticlePayload {
  article: Article!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of DestroyComment
"""
input DestroyCommentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DestroyComment
"""
type DestroyCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment!
}

"""
Autogenerated input type of DestroyUser
"""
input DestroyUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DestroyUser
"""
type DestroyUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  createArticle(
    """
    Parameters for CreateArticle
    """
    input: CreateArticleInput!
  ): CreateArticlePayload
  createComment(
    """
    Parameters for CreateComment
    """
    input: CreateCommentInput!
  ): CreateCommentPayload
  createUser(
    """
    Parameters for CreateUser
    """
    input: CreateUserInput!
  ): CreateUserPayload
  destroyArticle(
    """
    Parameters for DestroyArticle
    """
    input: DestroyArticleInput!
  ): DestroyArticlePayload
  destroyComment(
    """
    Parameters for DestroyComment
    """
    input: DestroyCommentInput!
  ): DestroyCommentPayload
  destroyUser(
    """
    Parameters for DestroyUser
    """
    input: DestroyUserInput!
  ): DestroyUserPayload

  """
  An example field added by the generator
  """
  testField: String!
  updateArticle(
    """
    Parameters for UpdateArticle
    """
    input: UpdateArticleInput!
  ): UpdateArticlePayload
  updateComment(
    """
    Parameters for UpdateComment
    """
    input: UpdateCommentInput!
  ): UpdateCommentPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
}

type Query {
  articles(limit: Int, page: Int): ArticleCollection
}

"""
Autogenerated input type of UpdateArticle
"""
input UpdateArticleInput {
  attributes: ArticleAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UpdateArticle
"""
type UpdateArticlePayload {
  article: Article!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of UpdateComment
"""
input UpdateCommentInput {
  attributes: CommentAttributes!
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateComment
"""
type UpdateCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  comment: Comment!
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  attributes: ArticleAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UpdateUser
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User {
  createdAt: ISO8601DateTime!
  email: String
  encryptedPassword: String!
  firstName: String
  id: ID!
  lastName: String
  provider: String
  rememberCreatedAt: ISO8601DateTime
  resetPasswordSentAt: ISO8601DateTime
  resetPasswordToken: String
  role: Int
  uid: String
  updatedAt: ISO8601DateTime!
}

"""
A user-readable error
"""
type UserError {
  """
  A description of the error
  """
  message: String!

  """
  Which input value this error came from
  """
  path: [String!]
}
